<Activity mc:Ignorable="sap sap2010" x:Class="CheckMissingField" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Data;assembly=Studio.Generated.TypedDataTable2" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugade="clr-namespace:UiPath.GSuite.Activities.Drive.Enums;assembly=UiPath.GSuite.Activities" xmlns:ugam="clr-namespace:UiPath.GSuite.Activities.Models;assembly=UiPath.GSuite.Activities" xmlns:ugsm="clr-namespace:UiPath.GSuite.Sheets.Models;assembly=UiPath.GSuite" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_config" Type="InArgument(njl:JObject)" />
    <x:Property Name="in_expected_id_number" Type="InArgument(x:String)" />
    <x:Property Name="in_application_id" Type="InArgument(x:String)" />
    <x:Property Name="out_check_status" Type="OutArgument(x:String)" />
    <x:Property Name="out_error_details" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CheckMissingField_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Activities.System.Text</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>Microsoft.Win32.SafeHandles</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Configuration.Assemblies</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.CodeDom.Compiler</x:String>
      <x:String>System.Buffers</x:String>
      <x:String>System.Buffers.Text</x:String>
      <x:String>System.Buffers.Binary</x:String>
      <x:String>System.Threading</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>System.Threading.Tasks.Sources</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.Unicode</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Security.Permissions</x:String>
      <x:String>System.Security.Cryptography</x:String>
      <x:String>System.Runtime</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.Remoting</x:String>
      <x:String>System.Runtime.ExceptionServices</x:String>
      <x:String>System.Runtime.ConstrainedExecution</x:String>
      <x:String>System.Runtime.Versioning</x:String>
      <x:String>System.Runtime.Loader</x:String>
      <x:String>System.Runtime.Intrinsics</x:String>
      <x:String>System.Runtime.Intrinsics.Wasm</x:String>
      <x:String>System.Runtime.Intrinsics.Arm</x:String>
      <x:String>System.Runtime.Intrinsics.X86</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.InteropServices.ObjectiveC</x:String>
      <x:String>System.Runtime.InteropServices.Marshalling</x:String>
      <x:String>System.Runtime.InteropServices.ComTypes</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Resources</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Reflection.Metadata</x:String>
      <x:String>System.Reflection.Emit</x:String>
      <x:String>System.IO.Enumeration</x:String>
      <x:String>System.Diagnostics.SymbolStore</x:String>
      <x:String>System.Diagnostics.Contracts</x:String>
      <x:String>System.Diagnostics.CodeAnalysis</x:String>
      <x:String>System.Diagnostics.Tracing</x:String>
      <x:String>System.Collections.Concurrent</x:String>
      <x:String>Internal</x:String>
      <x:String>System.CodeDom</x:String>
      <x:String>Microsoft.CSharp</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Linq.Expressions.Interpreter</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel.Design.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Security.Authentication.ExtendedProtection</x:String>
      <x:String>System.Timers</x:String>
      <x:String>System.ComponentModel.Design</x:String>
      <x:String>System.Xml.Schema</x:String>
      <x:String>System.Xml.Xsl</x:String>
      <x:String>System.Xml.Xsl.Runtime</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Xml.Resolvers</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.FileIO</x:String>
      <x:String>System.Security.Authentication</x:String>
      <x:String>System.Net.Cache</x:String>
      <x:String>System.Net.NetworkInformation</x:String>
      <x:String>System.Net.Security</x:String>
      <x:String>System.Net.Sockets</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>Microsoft</x:String>
      <x:String>Microsoft.CodeAnalysis</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic.Syntax</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.GSuite.Drive.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Models</x:String>
      <x:String>UiPath.GSuite.Sheets.Enums</x:String>
      <x:String>UiPath.GSuite.Sheets.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets.Enums</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography</AssemblyReference>
      <AssemblyReference>System.Security.Principal.Windows</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.IO.MemoryMappedFiles</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Registry</AssemblyReference>
      <AssemblyReference>System.IO.Pipes</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Threading.AccessControl</AssemblyReference>
      <AssemblyReference>System.Threading</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Text.Encodings.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Security.Claims</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.Pkcs</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.ProtectedData</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Resources.Writer</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.StackTrace</AssemblyReference>
      <AssemblyReference>System.Collections.Concurrent</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Net.Security</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.XPath.XDocument</AssemblyReference>
      <AssemblyReference>System.Net.NetworkInformation</AssemblyReference>
      <AssemblyReference>System.Net.Ping</AssemblyReference>
      <AssemblyReference>System.Net.Sockets</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Validation</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.Features</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Api</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities.Design</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable1</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable2</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable3</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="CheckMissingField" sap:VirtualizedContainerService.HintSize="1021.2,6459.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataRow" Name="row_app" />
      <Variable x:TypeArguments="x:String" Name="id_front_file" />
      <Variable x:TypeArguments="x:String" Name="id_back_file" />
      <Variable x:TypeArguments="x:String" Name="passport_file" />
      <Variable x:TypeArguments="x:String" Name="visa_file" />
      <Variable x:TypeArguments="x:String" Name="income_proof_file" />
      <Variable x:TypeArguments="x:String" Name="id_number" />
      <Variable x:TypeArguments="x:String" Name="full_name" />
      <Variable x:TypeArguments="x:String" Name="nationality" />
      <Variable x:TypeArguments="s:DateTime" Name="dob" />
      <Variable x:TypeArguments="x:Double" Name="declared_income" />
      <Variable x:TypeArguments="p1:DocumentTaxonomy" Name="taxonomyVariable" />
      <Variable x:TypeArguments="x:String" Name="out_check_status" />
      <Variable x:TypeArguments="x:String" Name="out_error_details" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="file_list" />
      <Variable x:TypeArguments="x:String" Name="docText" />
      <Variable x:TypeArguments="x:String" Name="documentType" />
      <Variable x:TypeArguments="x:String" Name="extractionResults" />
      <Variable x:TypeArguments="x:String" Name="extracted_id_number" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_customers" />
      <Variable x:TypeArguments="sd:DataRow" Name="customer_row" />
      <Variable x:TypeArguments="x:Object" Name="customer_row__check_application_status__" />
      <Variable x:TypeArguments="x:Object" Name="customer_row__check_application_error__" />
      <Variable x:TypeArguments="x:String" Name="sheetName" />
      <Variable x:TypeArguments="x:String" Name="in_SpreadsheetId" />
      <Variable x:TypeArguments="x:String" Name="errorDetails" />
      <Variable x:TypeArguments="x:String" Name="appFolder" />
      <Variable x:TypeArguments="x:String" Name="checkStatus" />
      <Variable x:TypeArguments="sd1:DataTable2" Name="dt_application" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="" sap:VirtualizedContainerService.HintSize="698.4,6404.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Try" sap:VirtualizedContainerService.HintSize="696.8,5186.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log a message indicating the start of the process with the application ID." sap:VirtualizedContainerService.HintSize="663.2,56.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Bắt đầu xác thực hồ sơ cho ID: &quot; + in_application_id]" />
          <ui:ReadRange Range="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[dt_customers]" DisplayName="Read data from the specified Excel file and sheet into a DataTable." sap:VirtualizedContainerService.HintSize="663.2,120" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Sheet1" WorkbookPath="Data\\customers.xlsx">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ReadRange>
          <Assign sap:VirtualizedContainerService.HintSize="663.2,174.4" sap2010:WorkflowViewState.IdRef="Assign_40">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[customer_row]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[If(String.IsNullOrWhiteSpace(in_application_id), Nothing, dt_customers.Select("application_id = '" + in_application_id + "'").FirstOrDefault())]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <uga:GSuiteApplicationScope Account="{x:Null}" ApiKey="{x:Null}" BrowserItemFriendlyName="{x:Null}" BrowserItemFullPath="{x:Null}" BrowserItemId="{x:Null}" BrowserParentItemId="{x:Null}" BrowserRuntimeItemFriendlyName="{x:Null}" BrowserRuntimeItemFullPath="{x:Null}" BrowserRuntimeItemId="{x:Null}" BrowserRuntimeParentItemId="{x:Null}" BucketId="{x:Null}" BucketName="{x:Null}" ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" Connector="{x:Null}" ContinueOnError="{x:Null}" CredentialID="{x:Null}" CredentialSecret="{x:Null}" Folder="{x:Null}" ManualRuntimeItemFullPath="{x:Null}" SecureCredentialSecret="{x:Null}" ServiceAccountEmail="{x:Null}" TimeoutMS="{x:Null}" UserEmail="{x:Null}" AuthenticationType="ServiceAccountKey" BucketInputMode="Browse" ConfigLocation="PropertiesPanel" DataStoreLocation="DISK" DisplayName="Google Workspace Scope" HasDomainWideAccesss="False" sap:VirtualizedContainerService.HintSize="663.2,601.6" sap2010:WorkflowViewState.IdRef="GSuiteApplicationScope_1" KeyPath="D:\\CAMTU\\UEL\\HK1_2526\\Final_RPA\\Assets\\rpacreditcardapproval-788128881699.json" KeyType="JSON" OAuthClient="UIPATH" Password="notasecret" RuntimeItemInputMode="Browse" Services="Unselected" UseConnectionService="False" User="483888EB">
            <uga:GSuiteApplicationScope.AuthenticationScopes>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="3">
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/drive.readonly</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/spreadsheets</InArgument>
                <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/spreadsheets.readonly</InArgument>
              </scg:List>
            </uga:GSuiteApplicationScope.AuthenticationScopes>
            <uga:GSuiteApplicationScope.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="GSuiteScope" />
                </ActivityAction.Argument>
                <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,418.4" sap2010:WorkflowViewState.IdRef="Sequence_24">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uga:ReadRangeConnections x:TypeArguments="sd1:DataTable2" ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" ContinueOnError="{x:Null}" ManualEntrySpreadsheetId="{x:Null}" RangeInformation="{x:Null}" Spreadsheet="{x:Null}" AuthScopesInvalid="False" BrowserItemFriendlyName="applications" BrowserItemId="https://docs.google.com/spreadsheets/d/1DBdqUxg-BugMZ962MQWNY-w94_wKX0xTsgu0f06RZWY/edit?usp=drivesdk" DisplayName="Read data from the specified Google Sheet (using either the provided ID or the ID from the dynamically found file) from the &quot;Applications&quot; sheet, including headers, and store it in a DataTable." HasHeaders="True" sap:VirtualizedContainerService.HintSize="416,279.2" sap2010:WorkflowViewState.IdRef="ReadRangeConnections`1_1" ItemSelectionMode="Browse" Range="Application" ReadAs="Values" Result="[dt_application]" TemplateBrowserItemFriendlyName="applications" TemplateBrowserItemId="https://docs.google.com/spreadsheets/d/1DBdqUxg-BugMZ962MQWNY-w94_wKX0xTsgu0f06RZWY/edit?usp=drivesdk" UseConnectionService="False" WorkingWithTemplateSpreadsheet="True">
                    <uga:ReadRangeConnections.ColumnNames>
                      <x:Array Type="x:String">
                        <x:String>application_id</x:String>
                        <x:String>submitted_at</x:String>
                        <x:String>full_name</x:String>
                        <x:String>dob</x:String>
                        <x:String>gender</x:String>
                        <x:String>nationality</x:String>
                        <x:String>phone</x:String>
                        <x:String>email</x:String>
                        <x:String>address</x:String>
                        <x:String>id_number</x:String>
                        <x:String>id_front_file</x:String>
                        <x:String>id_back_file</x:String>
                        <x:String>passport_number</x:String>
                        <x:String>passport_file</x:String>
                        <x:String>visa_file</x:String>
                        <x:String>employment_type</x:String>
                        <x:String>declared_income</x:String>
                        <x:String>income_proof_file</x:String>
                        <x:String>requested_limit</x:String>
                        <x:String>card_type</x:String>
                        <x:String>application_channel</x:String>
                        <x:String>visa_number</x:String>
                      </x:Array>
                    </uga:ReadRangeConnections.ColumnNames>
                    <uga:ReadRangeConnections.FileIdBackup>
                      <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" x:Name="__ReferenceID0" StoredValue="Browse">
                        <usau:BackupSlot.BackupValues>
                          <scg:List x:TypeArguments="x:Object" x:Key="UrlOrId" Capacity="1">
                            <x:Null />
                          </scg:List>
                        </usau:BackupSlot.BackupValues>
                      </usau:BackupSlot>
                    </uga:ReadRangeConnections.FileIdBackup>
                    <uga:ReadRangeConnections.Item>
                      <ugam:DriveItemArgument Backup="{x:Reference __ReferenceID0}" ConnectionDescriptor="{x:Null}" Existing="{x:Null}" FullPath="{x:Null}" IdOrUrl="{x:Null}" ParentId="{x:Null}" ParentIdFriendlyName="{x:Null}" RelativePath="{x:Null}" BrowserId="https://docs.google.com/spreadsheets/d/1DBdqUxg-BugMZ962MQWNY-w94_wKX0xTsgu0f06RZWY/edit?usp=drivesdk" ConnectionKey="eyJTY29wZXMiOlsiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9kcml2ZS5yZWFkb25seSIsImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvc3ByZWFkc2hlZXRzIiwiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9zcHJlYWRzaGVldHMucmVhZG9ubHkiXSwiRW1haWxBZGRyZXNzIjoiIiwiSGFzRG9tYWluV2lkZUFjY2VzcyI6ZmFsc2UsIktleVBhdGgiOiJEOlxccnBhXFxmaW5hbHByb2plY3RcXHVpcGF0aFxcQXNzZXRzXFxycGFjcmVkaXRjYXJkYXBwcm92YWwtNzg4MTI4ODgxNjk5Lmpzb24iLCJCdWNrZXRJZCI6bnVsbCwiQnVja2V0TmFtZSI6bnVsbCwiU2VydmljZUFjY291bnRFbWFpbCI6bnVsbCwiUGFzc3dvcmQiOiJub3Rhc2VjcmV0In0=" FriendlyName="applications" FullPathHint="RPA DATASET/applications" InputMode="Browse">
                        <ugam:DriveItemArgument.ParentIdFullPathHint>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ugam:DriveItemArgument.ParentIdFullPathHint>
                      </ugam:DriveItemArgument>
                    </uga:ReadRangeConnections.Item>
                    <uga:ReadRangeConnections.RangeMetadata>
                      <ugsm:RangeMetadataSlim ColumnStart="1" RangeType="Range" />
                    </uga:ReadRangeConnections.RangeMetadata>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uga:ReadRangeConnections>
                  <ui:LogMessage DisplayName="Log the number of rows read from the DataTable for debugging." sap:VirtualizedContainerService.HintSize="416,48" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[String.Format(&quot;Rows read from Sheets: {0}&quot;, dt_application.Rows.Count.ToString())]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </ActivityAction>
            </uga:GSuiteApplicationScope.Body>
            <uga:GSuiteApplicationScope.BucketFullPathBackup>
              <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="Browse">
                <usau:BackupSlot.BackupValues>
                  <scg:Dictionary x:TypeArguments="ugade:EDriveItemMode, scg:List(x:Object)" />
                </usau:BackupSlot.BackupValues>
              </usau:BackupSlot>
            </uga:GSuiteApplicationScope.BucketFullPathBackup>
            <uga:GSuiteApplicationScope.RuntimeItemFullPathBackup>
              <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="{x:Null}">
                <usau:BackupSlot.BackupValues>
                  <scg:Dictionary x:TypeArguments="ugade:EDriveItemMode, scg:List(x:Object)" />
                </usau:BackupSlot.BackupValues>
              </usau:BackupSlot>
            </uga:GSuiteApplicationScope.RuntimeItemFullPathBackup>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uga:GSuiteApplicationScope>
          <Assign DisplayName="Find the specific application row in the DataTable using the provided application ID." sap:VirtualizedContainerService.HintSize="663.2,56.8" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[row_app]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[dt_application.Select("application_id = '" + in_application_id + "'").FirstOrDefault()]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[row_app Is Nothing]" DisplayName="If the application row is not found, throw an exception with an appropriate message." sap:VirtualizedContainerService.HintSize="663.2,56.8" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="471.2,108" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TerminateWorkflow DisplayName="Throw activity with Message: &quot;Không tìm thấy application_id trong file applications.xlsx&quot;." sap:VirtualizedContainerService.HintSize="437.6,48" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="[&quot;Không tìm thấy application_id trong file applications.xlsx&quot;]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,732.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_32">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[appFolder]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.Combine(Environment.CurrentDirectory, "Data", "Output", in_application_id)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[id_front_file]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[If(row_app.Table.Columns.Contains("local_id_front_file") AndAlso Not String.IsNullOrWhiteSpace(row_app("local_id_front_file").ToString()), row_app("local_id_front_file").ToString().Trim(), System.IO.Path.Combine(appFolder, "01_ID_front.jpg"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[id_back_file]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[If(row_app.Table.Columns.Contains("local_id_back_file") AndAlso Not String.IsNullOrWhiteSpace(row_app("local_id_back_file").ToString()), row_app("local_id_back_file").ToString().Trim(), System.IO.Path.Combine(appFolder, "02_ID_back.jpg"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[passport_file]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[If(row_app.Table.Columns.Contains("local_passport_file") AndAlso Not String.IsNullOrWhiteSpace(row_app("local_passport_file").ToString()), row_app("local_passport_file").ToString().Trim(), Path.Combine(appFolder, "03_Passport.jpg"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[visa_file]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[If(row_app.Table.Columns.Contains("local_visa_file") AndAlso Not String.IsNullOrWhiteSpace(row_app("local_visa_file").ToString()), row_app("local_visa_file").ToString().Trim(), Path.Combine(appFolder, "04_Visa.jpg"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[income_proof_file]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[If(row_app.Table.Columns.Contains("local_income_proof_file") AndAlso Not String.IsNullOrWhiteSpace(row_app("local_income_proof_file").ToString()), row_app("local_income_proof_file").ToString().Trim(), Path.Combine(appFolder, "05_IncomeProof.jpg"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[id_number]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[row_app("id_number").ToString.Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[full_name]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[row_app("full_name").ToString.Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[nationality]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[row_app("nationality").ToString.Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[dob]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[If(String.IsNullOrWhiteSpace(row_app("dob").ToString()), DateTime.MinValue, If(DateTime.TryParseExact(row_app("dob").ToString().Trim(), New String() {"dd/MM/yyyy", "d/M/yyyy", "dd-M-yyyy", "d-M-yyyy"}, System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, Nothing), DateTime.ParseExact(row_app("dob").ToString().Trim(), New String() {"dd/MM/yyyy", "d/M/yyyy", "dd-M-yyyy", "d-M-yyyy"}, System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None), DateTime.MinValue))]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">[declared_income]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(row_app("declared_income"))]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="663.2,56.8" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomyVariable]" />
          <Assign DisplayName="Assign defaults:" sap:VirtualizedContainerService.HintSize="663.2,174.4" sap2010:WorkflowViewState.IdRef="Assign_14">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_check_status]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["PASS"]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign DisplayName="Assign defaults:" sap:VirtualizedContainerService.HintSize="663.2,174.4" sap2010:WorkflowViewState.IdRef="Assign_15">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_error_details]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[""]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign DisplayName="Assign để build file_list:" sap:VirtualizedContainerService.HintSize="663.2,174.4" sap2010:WorkflowViewState.IdRef="Assign_13">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[file_list]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[If(nationality = "Vietnam", New List(Of String) From {id_front_file, id_back_file}.Where(Function(p) Not String.IsNullOrEmpty(p)).ToList(), New List(Of String) From {passport_file, visa_file, income_proof_file}.Where(Function(p) Not String.IsNullOrEmpty(p)).ToList())]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each (vòng lặp qua file_list):" sap:VirtualizedContainerService.HintSize="663.2,3432" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[file_list]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="file_path" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="661.6,3301.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[String.IsNullOrWhiteSpace(file_path)]" DisplayName="FlowDecision 1: Condition: String.IsNullOrWhiteSpace(file_path)" sap:VirtualizedContainerService.HintSize="628,3241.6" sap2010:WorkflowViewState.IdRef="If_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="626.4,221.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign out_check_status = &quot;REJECT&quot;, out_error_details = &quot;Thiếu đường dẫn file trong hồ sơ.&quot; → Break." sap:VirtualizedContainerService.HintSize="592.8,56.8" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_check_status]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["REJECT"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign out_check_status = &quot;REJECT&quot;, out_error_details = &quot;Thiếu đường dẫn file trong hồ sơ.&quot; → Break." sap:VirtualizedContainerService.HintSize="592.8,56.8" sap2010:WorkflowViewState.IdRef="Assign_17">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_error_details]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["Thiếu đường dẫn file trong hồ sơ."]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break DisplayName="Assign out_check_status = &quot;REJECT&quot;, out_error_details = &quot;Thiếu đường dẫn file trong hồ sơ.&quot; → Break." sap:VirtualizedContainerService.HintSize="592.8,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="626.4,2890.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[Not File.Exists(file_path)]" DisplayName="FlowDecision 2: Condition: Not System.IO.File.Exists(file_path)" sap:VirtualizedContainerService.HintSize="592.8,2830.4" sap2010:WorkflowViewState.IdRef="If_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="591.2,456.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign out_check_status = &quot;REJECT&quot;, out_error_details = &quot;Không tìm thấy file: &quot; + file_path → Break." sap:VirtualizedContainerService.HintSize="557.6,174.4" sap2010:WorkflowViewState.IdRef="Assign_18">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_check_status]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["REJECT"]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <Assign DisplayName="Assign out_check_status = &quot;REJECT&quot;, out_error_details = &quot;Không tìm thấy file: &quot; + file_path → Break." sap:VirtualizedContainerService.HintSize="557.6,174.4" sap2010:WorkflowViewState.IdRef="Assign_19">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_error_details]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[String.Format("Không tìm thấy file: {0}", file_path)]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <ui:Break DisplayName="Assign out_check_status = &quot;REJECT&quot;, out_error_details = &quot;Không tìm thấy file: &quot; + file_path → Break." sap:VirtualizedContainerService.HintSize="557.6,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="591.2,2244" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="extracted_id_expiry_date" />
                                <Variable x:TypeArguments="x:String" Name="extracted_passport_expiry_date" />
                                <Variable x:TypeArguments="x:String" Name="extracted_visa_expiry_date" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File to call the OCR sub-workflow" sap:VirtualizedContainerService.HintSize="557.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" Level="Info" LogEntry="No" LogExit="No" Timeout="00:00:00" UnSafe="False" WorkflowFileName="Process\ExtractIDFromDocument.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_visa_expiry_date">[extracted_visa_expiry_date]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_passport_expiry_date">[extracted_passport_expiry_date]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_id_expiry_date">[extracted_id_expiry_date]</OutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_expected_id_number">[id_number]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_check_status">[checkStatus]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_error_details">[errorDetails]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_extracted_id_number">[extracted_id_number]</OutArgument>
                                  <InArgument x:TypeArguments="p1:DocumentTaxonomy" x:Key="in_taxonomy">[taxonomyVariable]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_file_path">[file_path]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="557.6,117.6" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;File: &quot; &amp; file_path &amp; vbCrLf &amp; &quot;Extracted ID: &quot; &amp; extracted_id_number &amp; vbCrLf &amp; &quot;ID Expiry: &quot; &amp; extracted_id_expiry_date &amp; vbCrLf &amp; &quot;Passport Expiry: &quot; &amp; extracted_passport_expiry_date &amp; vbCrLf &amp; &quot;Visa Expiry: &quot; &amp; extracted_visa_expiry_date]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:MessageBox>
                              <If Condition="[Not String.IsNullOrWhiteSpace(extracted_id_expiry_date)]" sap:VirtualizedContainerService.HintSize="557.6,420" sap2010:WorkflowViewState.IdRef="If_9">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Then" sap:VirtualizedContainerService.HintSize="449.6,256.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="416,165.6" sap2010:WorkflowViewState.IdRef="Assign_36">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[customer_row("id_number_expiry_date")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[extracted_id_expiry_date]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="449.6,24.8" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <If Condition="[Not String.IsNullOrWhiteSpace(extracted_passport_expiry_date)]" sap:VirtualizedContainerService.HintSize="557.6,420" sap2010:WorkflowViewState.IdRef="If_10">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Then" sap:VirtualizedContainerService.HintSize="449.6,256.8" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="416,165.6" sap2010:WorkflowViewState.IdRef="Assign_37">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[customer_row("passport_expiry_date")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[extracted_passport_expiry_date]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="449.6,24.8" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <If Condition="[Not String.IsNullOrWhiteSpace(extracted_visa_expiry_date)]" sap:VirtualizedContainerService.HintSize="557.6,420" sap2010:WorkflowViewState.IdRef="If_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Then" sap:VirtualizedContainerService.HintSize="449.6,256.8" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="416,165.6" sap2010:WorkflowViewState.IdRef="Assign_38">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[customer_row("visa_expiry_date")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[extracted_visa_expiry_date]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="449.6,24.8" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <If Condition="[Not Equals(extracted_id_number.Trim(), id_number.Trim()) AndAlso Not String.IsNullOrWhiteSpace(extracted_id_number)]" DisplayName="Evaluate the condition: if the trimmed 'extracted_id_number' is not equal to the trimmed 'id_number' AND 'extracted_id_number' is not empty or whitespace." sap:VirtualizedContainerService.HintSize="557.6,219.2" sap2010:WorkflowViewState.IdRef="If_8">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Then" sap:VirtualizedContainerService.HintSize="556,56" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Manually start the workflow." sap:VirtualizedContainerService.HintSize="522.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_33">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[out_check_status]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">["REJECT"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Update out_error_details by concatenating a string indicating an ID mismatch." sap:VirtualizedContainerService.HintSize="522.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_34">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[out_error_details]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[out_error_details &amp; " | ID mismatch: " &amp; id_number &amp; " vs " &amp; extracted_id_number]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:Break DisplayName="Exit the current loop." sap:VirtualizedContainerService.HintSize="522.4,48" sap2010:WorkflowViewState.IdRef="Break_3" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="556,24.8" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <If Condition="[Not String.IsNullOrWhiteSpace(extracted_passport_expiry_date)]" sap:VirtualizedContainerService.HintSize="557.6,411.2" sap2010:WorkflowViewState.IdRef="If_11">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Then" sap:VirtualizedContainerService.HintSize="449.6,256.8" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="416,165.6" sap2010:WorkflowViewState.IdRef="Assign_39">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[customer_row("passport_expiry_date")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[extracted_passport_expiry_date]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="449.6,24.8" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:LogMessage DisplayName="Log Message (sau For Each): &quot;Hoàn tất xử lý nghiệp vụ cho ID: &quot; + in_application_id." sap:VirtualizedContainerService.HintSize="663.2,48" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Hoàn tất xử lý nghiệp vụ cho ID: &quot; + in_application_id]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Body" sap:VirtualizedContainerService.HintSize="696.8,56" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign the string &quot;FAILED&quot; to the variable out_check_status." sap:VirtualizedContainerService.HintSize="663.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_24">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_check_status]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["FAILED"]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign the exception message to the variable out_error_details." sap:VirtualizedContainerService.HintSize="663.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_error_details]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log a message combining a static string and the exception message." sap:VirtualizedContainerService.HintSize="663.2,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Đã xảy ra lỗi hệ thống: &quot; &amp; exception.Message]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="696.8,997.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message: &quot;Bắt đầu cập nhật kết quả vào file Excel...&quot;." sap:VirtualizedContainerService.HintSize="663.2,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Bắt đầu cập nhật kết quả vào file Excel...&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <If Condition="[Not String.IsNullOrWhiteSpace(in_application_id)]" DisplayName="FlowDecision: Condition: Not String.IsNullOrWhiteSpace(in_application_id)" sap:VirtualizedContainerService.HintSize="663.2,763.2" sap2010:WorkflowViewState.IdRef="If_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Then" sap:VirtualizedContainerService.HintSize="504,494.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[customer_row IsNot Nothing]" DisplayName="FlowDecision: " sap:VirtualizedContainerService.HintSize="470.4,264" sap2010:WorkflowViewState.IdRef="If_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Then" sap:VirtualizedContainerService.HintSize="449.6,56" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign the value of out_check_status to the 'check_application_status' column of customer_row." sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_30">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[customer_row("check_application_status")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[out_check_status]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign the value of out_error_details to the 'check_application_error' column of customer_row." sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_31">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[customer_row("check_application_error")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[out_error_details]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:Annotation.AnnotationText="&#xA;" DisplayName="Else" sap:VirtualizedContainerService.HintSize="449.6,69.6" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="If the condition is met, log a warning message." sap:VirtualizedContainerService.HintSize="433.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[&quot;Application ID is missing. Skipping update to Excel file.&quot;]" />
                    </Sequence>
                  </If.Else>
                </If>
                <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" DataTable="[dt_customers]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="470.4,139.2" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="Data\\customers.xlsx">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:WriteRange>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Else" sap:VirtualizedContainerService.HintSize="504,139.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="If the condition is met, log a warning message." sap:VirtualizedContainerService.HintSize="470.4,48" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;Application ID is missing. Skipping update to Excel file.&quot;]" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>